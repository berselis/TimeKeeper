@model TimeKeeper.DTOs.PanelCargaDTO
@{
    Layout = "_LayoutPanel";
}

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">

        <a asp-controller="Home" asp-action="Index" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-90deg-left"></i>
            <span>Panel principal</span>
        </a>

        <div class="text-center">

            <h3><strong>Cargar archivo ponchador</strong></h3>
        </div>


    </div>
    <div class="col-md-12 col-sm-12 col-xs-12">

        <div class="col-md-12 col-sm-12 col-xs-12 upload-body">
            <form class="wrapper" asp-controller="CargaHoraria" asp-action="UploadDataFile" method="post" enctype="multipart/form-data">
                <div id="FormUploadExcel" class="form-upload-excel">
                    <input type="file" id="ExcelFile" hidden="hidden" name="fileForm" />
                    <i class="bi bi-file-earmark-ruled"></i>
                </div>
                <section id="ProgressArea" class="progress-area"></section>
                <section id="UploadArea" class="uploaded-area"></section>
            </form>
        </div>
    </div>

    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="alert alert-primary">
            <div class="row">
                <div class="col-md-3 col-sm-3 col-xs-12">
                    <ul class="list-inline-item list-inline">
                        <li class="list-group-item active" aria-current="true">
                            <strong class="align-content-center">Ultima carga</strong>
                        </li>
                        <li class="list-group-item">
                            <h6><strong>Actualizado hasta</strong></h6>
                            <h6>@Model.FechaActualizado</h6>
                        </li>
                        <li class="list-group-item">
                            <h6><strong>Aplicado en</strong></h6>
                            <h6>@Model.FechaAplicado</h6>
                        </li>
                        <li class="list-group-item">
                            <h6><strong>Por usuario</strong></h6>
                            <h6>@Model.Usuario</h6>
                        </li>
                    </ul>


                </div>

                <div class="col-md-9 col-sm-9 col-xs-12">
                    <table class="table" id="TablaCarga">
                        <thead>
                            <tr>
                                <th>Fecha actualizado</th>
                                <th>Fecha aplicado</th>
                                <th>Usuario</th>
                                <th>Registros</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Cargas)
                            {
                                <tr>
                                    <td>@item.FechaRegistro.ToString("yyyy-MM-dd hh:mm tt")</td>
                                    <td>@item.FechaAplicado.ToString("yyyy-MM-dd hh:mm tt")</td>
                                    <td>@item.NombreUsuario</td>
                                    <td>@item.Comentario</td>
                                </tr>
                            }


                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

</div>

<script type="text/javascript">
    const form = document.getElementById('FormUploadExcel');
    const excelfileInput = document.getElementById('ExcelFile');
    const progresArea = document.getElementById('ProgressArea');
    const uploadArea = document.getElementById('UploadArea');
    const cargaTable = document.getElementById('TablaCarga');
    const rows = cargaTable.lastElementChild.childElementCount;


    document.addEventListener('DOMContentLoaded', () => {
        if (rows > 1) {
            let table = new DataTable(cargaTable, {
                language: {
                    url: 'https://cdn.datatables.net/plug-ins/1.13.1/i18n/es-ES.json'
                }
            });
        }

        MostrarMensaje();

    });


    function MostrarMensaje() {
        const msj = '@Model.Msj';


        switch (msj) {
            case "error":
                ShowDialog('Error file', 'error');
                break;
            case "success":
                ShowDialog('Cargado', 'success');
                break;
            case "invalidFormat":
                ShowDialog('Formato de archivo inválido', 'warning');
            case "notTimeRegister":
                ShowDialog('No hay registros', 'warning');
            case "duplicated":
                ShowDialog('Registros duplicado', 'warning');
            default:
                return;
        }


        function ShowDialog(text, typeIcon) {
            swal({
                title: text,
                text: "Archivo ponchador",
                icon: typeIcon
            });
        }
    }




    form.addEventListener('click', (e) => {
        excelfileInput.click();
    });

    excelfileInput.onchange = ({ target }) => {
        let file = target.files[0];
        if (ValidateFile(file)) {
            if (file) {
                UploadFile(file);
            }
        }
    }


    function ValidateFile(file) {

        const format = file.name.split('.').find(item => item === 'dat');

        if (format != 'dat') {
            swal({
                title: '.DAT',
                text: "Solo archivos permitidos",
                icon: "error"
            });
            return false;
        }



        return true;

    }

    function UploadFile(file) {
        $(progresArea).fadeIn(50);
        let fileName = file.name;
        let loaded = 0;
        let total = file.size;
        let bubble = total / 10;
        if (fileName.length >= 12) {
            let splitName = fileName.split('.');
            fileName = `${splitName[0].substring(0, 12)}... .${splitName[1]}`;
        }

        let counts = setInterval(Update, 100);

        function Update() {
            loaded += bubble;
            let fileLoadedPercent = Math.floor((loaded / total) * 100);
            let fileTotal = Math.floor(total / 1000);
            let fileSize;
            (fileTotal < 1024) ? fileSize = fileTotal + ' KB' : fileSize = (loaded / (1024 * 1024)).toFixed(2) + ' MB';
            if (fileLoadedPercent >= 100) fileLoadedPercent = 100;
            uploadArea.innerHTML = '';
            let progressHTML = `
                                            <ul>
                                            <li>
                                                <i class="icofont icofont-file-excel"></i>
                                                <div class="content">
                                                    <div class="details">
                                                        <span class="name">${fileName} ● Load</span>
                                                        <span class="percent">${fileLoadedPercent}%</span>
                                                    </div>
                                                    <div class="progress-bar-excel">
                                                        <div class="progress-excel" style="width:${fileLoadedPercent}%;"></div>
                                                    </div>
                                                </div>
                                            </li>
                                            </ul>
                                            `;

            progresArea.innerHTML = progressHTML;

            if (loaded >= total) {
                clearInterval(counts);
                $(progresArea).fadeOut(150, function () {
                    progresArea.innerHTML = '';
                    let doneHTML = `
                                                <ul>
                                                    <li>
                                                        <i class="icofont icofont-file-excel"></i>
                                                        <div class="content">
                                                            <div class="details">
                                                                <span class="name">${file.name}</span>
                                                                <span class="size">${fileSize}</span>
                                                            </div>
                                                        </div>
                                                        <button type="submit" class="btn btn-outline-success btn-sm">
                                                            <i class="bi bi-file-arrow-up-fill"></i>
                                                            <strong>Cargar</strong>
                                                        </button>
                                                        <i onclick="RemoveFile(this)" class="bi bi-x-circle-fill remove-file"></i>
                                                    </li>
                                                </ul>
                                                `;
                    uploadArea.innerHTML = doneHTML;
                })

            }

        }
    }

    function RemoveFile(Tag) {
        $(Tag.parentElement.parentElement).fadeOut(300, function () {
            Tag.parentElement.parentElement.remove();
            excelfileInput.value = null;
        });

    }

</script>