// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;
using TimeKeeper.Models;

namespace TimeKeeper.Models
{
    public partial class TimeKeeperDBContext
    {
        private ITimeKeeperDBContextProcedures _procedures;

        public virtual ITimeKeeperDBContextProcedures Procedures
        {
            get
            {
                if (_procedures is null) _procedures = new TimeKeeperDBContextProcedures(this);
                return _procedures;
            }
            set
            {
                _procedures = value;
            }
        }

        public ITimeKeeperDBContextProcedures GetProcedures()
        {
            return Procedures;
        }

        protected void OnModelCreatingGeneratedProcedures(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TiemposEmpleadoByDateResult>().HasNoKey().ToView(null);
        }
    }

    public partial class TimeKeeperDBContextProcedures : ITimeKeeperDBContextProcedures
    {
        private readonly TimeKeeperDBContext _context;

        public TimeKeeperDBContextProcedures(TimeKeeperDBContext context)
        {
            _context = context;
        }

        public virtual async Task<List<TiemposEmpleadoByDateResult>> TiemposEmpleadoByDateAsync(DateTime? fechaIni, DateTime? fechaFin, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "fechaIni",
                    Value = fechaIni ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Date,
                },
                new SqlParameter
                {
                    ParameterName = "fechaFin",
                    Value = fechaFin ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Date,
                },
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<TiemposEmpleadoByDateResult>("EXEC @returnValue = [dbo].[TiemposEmpleadoByDate] @fechaIni, @fechaFin", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }
    }
}
